#!/bin/sh
# This is the simple installer script for LamPI
# (c) M. Westenberg, 2013
#
LINUX="y"; export LINUX
WIRING="y"; export WIRING
CRONTAB="y"; export CRONTAB

cd /home/pi
echo "This script will upgrade your Raspberry to its latest revision of software."
echo "It will instal MYSQL, PHP and Apache webserver packages which will take"
echo "some time to install. Please press enter to continue or CTRL-C to abort."
echo -n "<Press ENTER to start>"
read a

# --------------------------------------------------------------
# General Linux bookkeeping and installatation of the latest packages
#
if [ $LINUX = "y" ]; then
  echo "Next step is to install Linux PHP, Mysql and Apache library"
  echo -n "<Press ENTER to continue>"
  read a
  echo ""
	apt-get update
	apt-get upgrade

	apt-get install php5
	apt-get install mysql-server
    apt-get install mysql-client
    apt-get install php5-mysql
	apt-get install apache2
    apt-get install phpmyadmin
    apt-get install i2c-tools

	echo "All LAMP packages have been installed"
	echo ""
fi


echo "Finished installing Linux packages"
# -------------------------------------------------------------
# Download, Install and build the wiringPI library of Gordon
#
if [ $WIRING != "n" ]; then
  echo "Next step is to install the wiringPI library"
  echo -n "<Press ENTER to continue>"
  read a
  echo ""
  echo "Starting installation of Wiring Libraries"
  sudo apt-get install git-core
  if [ -d wiringPi ]; then
	cd wiringPi
	git pull origin
  else
	git clone git://git.drogon.net/wiringPi
	cd wiringPi
	./build
  fi
	echo ""
fi



# --------------------------------------------------------------
# Install the LamPI software from the download server
#
cd /home/pi

# The command below will FAIL if the PI_install script is put in /home/pi/scripts or
# if the /home/pi directory is not empty
rm -rf /tmp/effe
mkdir /tmp/effe
git clone git://github.com/platenspeler/LamPI-1.9 /tmp/effe
cd /tmp/effe; tar cf - . | ( cd /home/pi; tar xpf - )
rm -rf /tmp/effe

sudo sed 's|/var/www|/home/pi/www|g' /etc/apache2/sites-available/default > /tmp/effe
sudo mv /etc/apache2/sites-available/default /etc/apache2/sites-available/default.org
sudo mv /tmp/effe /etc/apache2/sites-available/default
sudo /etc/init.d/apache2 restart

# Make the w1 bus modules load at system startup
sudo echo 'w1-gpio' >> /etc/modules
sudo echo 'w1-therm' >> /etc/modules
#sudo echo 'i2c-dev' >> /etc/modules

mkdir /home/pi/log; chown pi /home/pi/log
mkdir /home/pi/exe

# --------------------------------------------------------------
# Fix the .exe directory
#
cd /home/pi/receivers/sniffer; make
sudo make install

cd /home/pi/receivers/livolo; make
sudo make install

cd /home/pi/receivers/kaku; make
sudo make install

cd /home/pi/receivers/lights; make
sudo make install

cd /home/pi/receivers/lights; make
sudo make install

# --------------------------------------------------------------
# Setup the crontab so that daemon and receiver are enabled.
#
if [ $CRONTAB = "y" ]; then
  echo "Next step is to install the crontab entries for the daemon"
  echo -n "<Press ENTER to continue>"
  read a
  echo ""
  echo "Setting up crontab"
  crontab -u pi -l | grep "PI-run" > /dev/null
  if [ $? = 0 ]; then
	echo "-- Crontab already contains LamPI PI=run commands"
  else
	echo "-- Crontab adding LamPI commands"
	crontab -u pi -l > /tmp/effe
    echo "* * * * * cd /home/pi/scripts && sh ./PI-run" >> /tmp/effe
    echo "* * * * * cd /home/pi/scripts && sh ./PI-rcv" >> /tmp/effe
    echo "0 2 * * * cd /home/pi/scripts && sh ./PI-log" >> /tmp/effe
    echo "* * * * * cd /home/pi/scripts && sh ./PI-1w"  >> /tmp/effe
    crontab -u pi /tmp/effe
  fi
  
  if [ -f /etc/cron.allow ]; then
	cat /etc/cron.allow | grep pi > /dev/null
	if [ $? != 0 ]; then
		echo "pi" >> /etc/at.allow
	fi
  fi
  echo ""
fi
